latest checkpoint: 5000
DEBUG: possible_state_paths: ['/bb/llm/gaf51275/llama/checkpoints/llama-2-13b-base-extended-megatron/llm-jp/tp1-pp1/iter_0015000', '/bb/llm/gaf51275/llama/checkpoints/llama-2-13b-base-extended-megatron/llm-jp/tp1-pp1/iter_0015000/iter_5000']
Loading Megatron-LM checkpoint arguments from: /bb/llm/gaf51275/llama/checkpoints/llama-2-13b-base-extended-megatron/llm-jp/tp1-pp1/iter_0015000
Loading Megatron-LM checkpoint arguments from: /bb/llm/gaf51275/llama/checkpoints/llama-2-13b-base-extended-megatron/llm-jp/tp1-pp1/iter_0015000/mp_rank_00/model_optim_rng.pt
Converting
Converting embeddings
Converting transformer layers
Converting pipeline parallel rank 0
DEBUG: key:layers.0.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.1.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.2.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.3.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.4.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.5.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.6.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.7.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.8.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.9.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.10.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.11.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.12.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.13.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.14.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.15.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.16.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.17.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.18.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.19.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.20.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.21.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.22.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.23.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.24.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.25.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.26.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.27.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.28.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.29.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.30.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.31.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.32.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.33.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.34.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.35.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.36.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.37.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.38.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
DEBUG: key:layers.39.self_attention.query_key_value.weight, params: torch.Size([15360, 5120])
Converting final layernorm
Converting LM head
shape: torch.Size([43176, 5120])
Conversion from Megatron-LM to Transformers is done!
# model.embed_tokens.weight                        : torch.Size([43176, 5120])
# model.layers.0.input_layernorm.weight            : torch.Size([5120])
# model.layers.0.self_attn.rotary_emb.inv_freq     : torch.Size([64])
# model.layers.0.self_attn.q_proj.weight           : torch.Size([5120, 5120])
# model.layers.0.self_attn.k_proj.weight           : torch.Size([5120, 5120])
# model.layers.0.self_attn.v_proj.weight           : torch.Size([5120, 5120])
# model.layers.0.self_attn.o_proj.weight           : torch.Size([5120, 5120])
# model.layers.0.post_attention_layernorm.weight   : torch.Size([5120])
# model.layers.0.mlp.gate_proj.weight              : torch.Size([13824, 5120])
# model.layers.0.mlp.up_proj.weight                : torch.Size([13824, 5120])
# model.layers.0.mlp.down_proj.weight              : torch.Size([5120, 13824])
# model.layers.1.input_layernorm.weight            : torch.Size([5120])
# model.layers.1.self_attn.rotary_emb.inv_freq     : torch.Size([64])
# model.layers.1.self_attn.q_proj.weight           : torch.Size([5120, 5120])
# model.layers.1.self_attn.k_proj.weight           : torch.Size([5120, 5120])
# model.layers.1.self_attn.v_proj.weight           : torch.Size([5120, 5120])
# model.layers.1.self_attn.o_proj.weight           : torch.Size([5120, 5120])
# model.layers.1.post_attention_layernorm.weight   : torch.Size([5120])
# model.layers.1.mlp.gate_proj.weight              : torch.Size([13824, 5120])
# model.layers.1.mlp.up_proj.weight                : torch.Size([13824, 5120])
# model.layers.1.mlp.down_proj.weight              : torch.Size([5120, 13824])
# model.layers.2.input_layernorm.weight            : torch.Size([5120])
# model.layers.2.self_attn.rotary_emb.inv_freq     : torch.Size([64])
# model.layers.2.self_attn.q_proj.weight           : torch.Size([5120, 5120])
# model.layers.2.self_attn.k_proj.weight           : torch.Size([5120, 5120])
# model.layers.2.self_attn.v_proj.weight           : torch.Size([5120, 5120])
# model.layers.2.self_attn.o_proj.weight           : torch.Size([5120, 5120])
# model.layers.2.post_attention_layernorm.weight   : torch.Size([5120])
# model.layers.2.mlp.gate_proj.weight              : torch.Size([13824, 5120])
# model.layers.2.mlp.up_proj.weight                : torch.Size([13824, 5120])
# model.layers.2.mlp.down_proj.weight              : torch.Size([5120, 13824])
# model.layers.3.input_layernorm.weight            : torch.Size([5120])
# model.layers.3.self_attn.rotary_emb.inv_freq     : torch.Size([64])
# model.layers.3.self_attn.q_proj.weight           : torch.Size([5120, 5120])
# model.layers.3.self_attn.k_proj.weight           : torch.Size([5120, 5120])
# model.layers.3.self_attn.v_proj.weight           : torch.Size([5120, 5120])
# model.layers.3.self_attn.o_proj.weight           : torch.Size([5120, 5120])
# model.layers.3.post_attention_layernorm.weight   : torch.Size([5120])
# model.layers.3.mlp.gate_proj.weight              : torch.Size([13824, 5120])
# model.layers.3.mlp.up_proj.weight                : torch.Size([13824, 5120])
# model.layers.3.mlp.down_proj.weight              : torch.Size([5120, 13824])
# model.layers.4.input_layernorm.weight            : torch.Size([5120])
# model.layers.4.self_attn.rotary_emb.inv_freq     : torch.Size([64])
# model.layers.4.self_attn.q_proj.weight           : torch.Size([5120, 5120])
# model.layers.4.self_attn.k_proj.weight           : torch.Size([5120, 5120])
# model.layers.4.self_attn.v_proj.weight           : torch.Size([5120, 5120])
# model.layers.4.self_attn.o_proj.weight           : torch.Size([5120, 5120])
# model.layers.4.post_attention_layernorm.weight   : torch.Size([5120])
# model.layers.4.mlp.gate_proj.weight              : torch.Size([13824, 5120])
# model.layers.4.mlp.up_proj.weight                : torch.Size([13824, 5120])
# model.layers.4.mlp.down_proj.weight              : torch.Size([5120, 13824])
# model.layers.5.input_layernorm.weight            : torch.Size([5120])
# model.layers.5.self_attn.rotary_emb.inv_freq     : torch.Size([64])
# model.layers.5.self_attn.q_proj.weight           : torch.Size([5120, 5120])
# model.layers.5.self_attn.k_proj.weight           : torch.Size([5120, 5120])
# model.layers.5.self_attn.v_proj.weight           : torch.Size([5120, 5120])
# model.layers.5.self_attn.o_proj.weight           : torch.Size([5120, 5120])
# model.layers.5.post_attention_layernorm.weight   : torch.Size([5120])
# model.layers.5.mlp.gate_proj.weight              : torch.Size([13824, 5120])
# model.layers.5.mlp.up_proj.weight                : torch.Size([13824, 5120])
# model.layers.5.mlp.down_proj.weight              : torch.Size([5120, 13824])
# model.layers.6.input_layernorm.weight            : torch.Size([5120])
# model.layers.6.self_attn.rotary_emb.inv_freq     : torch.Size([64])
# model.layers.6.self_attn.q_proj.weight           : torch.Size([5120, 5120])
# model.layers.6.self_attn.k_proj.weight           : torch.Size([5120, 5120])
# model.layers.6.self_attn.v_proj.weight           : torch.Size([5120, 5120])
# model.layers.6.self_attn.o_proj.weight           : torch.Size([5120, 5120])
# model.layers.6.post_attention_layernorm.weight   : torch.Size([5120])
# model.layers.6.mlp.gate_proj.weight              : torch.Size([13824, 5120])
# model.layers.6.mlp.up_proj.weight                : torch.Size([13824, 5120])
# model.layers.6.mlp.down_proj.weight              : torch.Size([5120, 13824])
# model.layers.7.input_layernorm.weight            : torch.Size([5120])
# model.layers.7.self_attn.rotary_emb.inv_freq     : torch.Size([64])
# model.layers.7.self_attn.q_proj.weight           : torch.Size([5120, 5120])
# model.layers.7.self_attn.k_proj.weight           : torch.Size([5120, 5120])
# model.layers.7.self_attn.v_proj.weight           : torch.Size([5120, 5120])
# model.layers.7.self_attn.o_proj.weight           : torch.Size([5120, 5120])
# model.layers.7.post_attention_layernorm.weight   : torch.Size([5120])
# model.layers.7.mlp.gate_proj.weight              : torch.Size([13824, 5120])
# model.layers.7.mlp.up_proj.weight                : torch.Size([13824, 5120])
# model.layers.7.mlp.down_proj.weight              : torch.Size([5120, 13824])
# model.layers.8.input_layernorm.weight            : torch.Size([5120])
# model.layers.8.self_attn.rotary_emb.inv_freq     : torch.Size([64])
# model.layers.8.self_attn.q_proj.weight           : torch.Size([5120, 5120])
# model.layers.8.self_attn.k_proj.weight           : torch.Size([5120, 5120])
# model.layers.8.self_attn.v_proj.weight           : torch.Size([5120, 5120])
# model.layers.8.self_attn.o_proj.weight           : torch.Size([5120, 5120])
# model.layers.8.post_attention_layernorm.weight   : torch.Size([5120])
# model.layers.8.mlp.gate_proj.weight              : torch.Size([13824, 5120])
# model.layers.8.mlp.up_proj.weight                : torch.Size([13824, 5120])
# model.layers.8.mlp.down_proj.weight              : torch.Size([5120, 13824])
# model.layers.9.input_layernorm.weight            : torch.Size([5120])
# model.layers.9.self_attn.rotary_emb.inv_freq     : torch.Size([64])
# model.layers.9.self_attn.q_proj.weight           : torch.Size([5120, 5120])
# model.layers.9.self_attn.k_proj.weight           : torch.Size([5120, 5120])
# model.layers.9.self_attn.v_proj.weight           : torch.Size([5120, 5120])
# model.layers.9.self_attn.o_proj.weight           : torch.Size([5120, 5120])
# model.layers.9.post_attention_layernorm.weight   : torch.Size([5120])
# model.layers.9.mlp.gate_proj.weight              : torch.Size([13824, 5120])
# model.layers.9.mlp.up_proj.weight                : torch.Size([13824, 5120])
# model.layers.9.mlp.down_proj.weight              : torch.Size([5120, 13824])
# model.layers.10.input_layernorm.weight           : torch.Size([5120])
# model.layers.10.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.10.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.10.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.10.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.10.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.10.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.10.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.10.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.10.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.11.input_layernorm.weight           : torch.Size([5120])
# model.layers.11.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.11.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.11.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.11.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.11.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.11.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.11.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.11.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.11.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.12.input_layernorm.weight           : torch.Size([5120])
# model.layers.12.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.12.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.12.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.12.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.12.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.12.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.12.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.12.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.12.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.13.input_layernorm.weight           : torch.Size([5120])
# model.layers.13.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.13.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.13.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.13.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.13.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.13.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.13.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.13.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.13.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.14.input_layernorm.weight           : torch.Size([5120])
# model.layers.14.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.14.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.14.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.14.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.14.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.14.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.14.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.14.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.14.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.15.input_layernorm.weight           : torch.Size([5120])
# model.layers.15.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.15.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.15.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.15.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.15.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.15.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.15.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.15.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.15.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.16.input_layernorm.weight           : torch.Size([5120])
# model.layers.16.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.16.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.16.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.16.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.16.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.16.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.16.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.16.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.16.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.17.input_layernorm.weight           : torch.Size([5120])
# model.layers.17.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.17.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.17.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.17.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.17.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.17.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.17.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.17.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.17.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.18.input_layernorm.weight           : torch.Size([5120])
# model.layers.18.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.18.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.18.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.18.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.18.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.18.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.18.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.18.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.18.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.19.input_layernorm.weight           : torch.Size([5120])
# model.layers.19.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.19.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.19.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.19.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.19.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.19.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.19.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.19.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.19.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.20.input_layernorm.weight           : torch.Size([5120])
# model.layers.20.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.20.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.20.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.20.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.20.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.20.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.20.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.20.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.20.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.21.input_layernorm.weight           : torch.Size([5120])
# model.layers.21.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.21.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.21.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.21.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.21.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.21.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.21.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.21.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.21.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.22.input_layernorm.weight           : torch.Size([5120])
# model.layers.22.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.22.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.22.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.22.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.22.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.22.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.22.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.22.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.22.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.23.input_layernorm.weight           : torch.Size([5120])
# model.layers.23.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.23.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.23.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.23.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.23.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.23.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.23.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.23.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.23.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.24.input_layernorm.weight           : torch.Size([5120])
# model.layers.24.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.24.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.24.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.24.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.24.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.24.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.24.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.24.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.24.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.25.input_layernorm.weight           : torch.Size([5120])
# model.layers.25.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.25.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.25.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.25.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.25.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.25.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.25.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.25.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.25.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.26.input_layernorm.weight           : torch.Size([5120])
# model.layers.26.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.26.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.26.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.26.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.26.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.26.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.26.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.26.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.26.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.27.input_layernorm.weight           : torch.Size([5120])
# model.layers.27.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.27.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.27.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.27.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.27.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.27.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.27.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.27.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.27.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.28.input_layernorm.weight           : torch.Size([5120])
# model.layers.28.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.28.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.28.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.28.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.28.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.28.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.28.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.28.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.28.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.29.input_layernorm.weight           : torch.Size([5120])
# model.layers.29.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.29.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.29.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.29.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.29.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.29.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.29.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.29.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.29.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.30.input_layernorm.weight           : torch.Size([5120])
# model.layers.30.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.30.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.30.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.30.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.30.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.30.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.30.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.30.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.30.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.31.input_layernorm.weight           : torch.Size([5120])
# model.layers.31.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.31.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.31.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.31.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.31.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.31.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.31.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.31.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.31.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.32.input_layernorm.weight           : torch.Size([5120])
# model.layers.32.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.32.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.32.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.32.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.32.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.32.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.32.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.32.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.32.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.33.input_layernorm.weight           : torch.Size([5120])
# model.layers.33.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.33.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.33.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.33.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.33.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.33.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.33.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.33.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.33.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.34.input_layernorm.weight           : torch.Size([5120])
# model.layers.34.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.34.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.34.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.34.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.34.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.34.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.34.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.34.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.34.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.35.input_layernorm.weight           : torch.Size([5120])
# model.layers.35.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.35.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.35.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.35.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.35.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.35.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.35.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.35.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.35.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.36.input_layernorm.weight           : torch.Size([5120])
# model.layers.36.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.36.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.36.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.36.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.36.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.36.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.36.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.36.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.36.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.37.input_layernorm.weight           : torch.Size([5120])
# model.layers.37.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.37.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.37.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.37.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.37.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.37.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.37.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.37.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.37.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.38.input_layernorm.weight           : torch.Size([5120])
# model.layers.38.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.38.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.38.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.38.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.38.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.38.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.38.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.38.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.38.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.layers.39.input_layernorm.weight           : torch.Size([5120])
# model.layers.39.self_attn.rotary_emb.inv_freq    : torch.Size([64])
# model.layers.39.self_attn.q_proj.weight          : torch.Size([5120, 5120])
# model.layers.39.self_attn.k_proj.weight          : torch.Size([5120, 5120])
# model.layers.39.self_attn.v_proj.weight          : torch.Size([5120, 5120])
# model.layers.39.self_attn.o_proj.weight          : torch.Size([5120, 5120])
# model.layers.39.post_attention_layernorm.weight  : torch.Size([5120])
# model.layers.39.mlp.gate_proj.weight             : torch.Size([13824, 5120])
# model.layers.39.mlp.up_proj.weight               : torch.Size([13824, 5120])
# model.layers.39.mlp.down_proj.weight             : torch.Size([5120, 13824])
# model.norm.weight                                : torch.Size([5120])
# lm_head.weight                                   : torch.Size([43176, 5120])
Saving config
The model is bigger than the maximum size per checkpoint (10GB) and is going to be split in 3 checkpoint shards. You can find where each parameters has been saved in the index located at /bb/llm/gaf51275/llama/from_megatron_hf_checkpoints/hf_checkpoints/Llama2-13b-base-extended-llm-jp/iter_0005000/pytorch_model.bin.index.json.
